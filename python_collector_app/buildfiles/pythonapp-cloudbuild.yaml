steps:
  # Build the Container Image
  - id: "Build CaC Python Image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [ 'build','-t','${_REGION}-docker.pkg.dev/${_PROJECT_ID}/cac-python/cac-app:${_IMAGE_TAG}', '-f', 'Dockerfile', '.']
  # Push the container image to Artifact Registry
  - id: "Push the Image to Artifact Registry"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/cac-python/cac-app:${_IMAGE_TAG}'
      ]
  - id: "Build Cloudrun Template file"
    name: ubuntu
    entrypoint: bash
    args:
      - -c
      - |
        cat <<EOF > /workspace/cloudrun.yaml
        apiVersion: serving.knative.dev/v1
        kind: Service
        metadata:
          name: cac-solution-dev
          labels:
            cloud.googleapis.com/location: northamerica-northeast1
          annotations:
        spec:
          template:
            metadata:
              labels:
                run.googleapis.com/startupProbeType: Default
              annotations:
                autoscaling.knative.dev/maxScale: '1'
                run.googleapis.com/execution-environment: gen2
                run.googleapis.com/startup-cpu-boost: 'true'
                run.googleapis.com/container-dependencies: '{"cac-python-1":["opa-1"]}'
            spec:
              containerConcurrency: 80
              timeoutSeconds: 300
              serviceAccountName: ${_SERVICE_ACCOUNT}
              containers:
              - name: cac-python-1
                image: ${_REGION}-docker.pkg.dev/cacv2-devproj/cac-python/cac-app:${_IMAGE_TAG}
                ports:
                - name: http1
                  containerPort: ${_APP_PORT}
                env:
                - name: APP_PORT
                  value: "${_APP_PORT}"
                - name: LOG_LEVEL
                  value: "INFO"
                - name: GCP_PROJECT
                  value: "${_PROJECT_ID}"
                - name: ORG_NAME
                  value: "${_ORG_NAME}"
                - name: ORG_ID
                  value: "${_ORG_ID}"
                - name: GCS_BUCKET
                  value: "${_GCS_BUCKET}"
                - name: GC_PROFILE
                  value: "${_GC_PROFILE}"
                - name: TENANT_DOMAIN
                  value: "${_DOMAIN}"
                - name: POLICY_VERSION
                  value: "${_POLICY_VERSION}"
                - name: APP_VERSION
                  value: "${_IMAGE_TAG}"              
                resources:
                  limits:
                    cpu: 4000m
                    memory: 4Gi
              - name: gcloud-git-sync
                image: gcr.io/google.com/cloudsdktool/cloud-sdk:509.0.0-alpine
                command: ['/bin/bash', '-c']
                args: 
                  - git config --global credential.helper gcloud.sh; 
                  git clone --quiet ${_POLICY_REPO} /mnt/policies; 
                  cd /mnt/policies; 
                  git checkout ${_BRANCH}; 
                  sleep 300
                resources:
                  limits:
                    cpu: 1000m
                    memory: 2Gi
                volumeMounts:
                - name: policies
                  mountPath: /mnt/policies
              - name: opa-1
                image: "${_OPA_IMAGE}"
                args:
                  - run
                  - --server
                  - --addr
                  - :8181
                  - /mnt/policies/
                env:
                - name: GR11_04_ORG_ID
                  value: "${_ORG_ID}"
                - name: GR01_03_DOMAIN
                  value: "${_DOMAIN}"
                - name: GR02_01_DOMAIN
                  value: "${_DOMAIN}"
                - name: GR01_06_PRIVILEGED_USERS
                  value: "${_PRIVILEGED_USERS_LIST}"
                - name: GR01_06_REGULAR_USERS
                  value: "${_REGULAR_USERS_LIST}"
                - name: GR02_01_PRIVILEGED_USERS
                  value: "${_PRIVILEGED_USERS_LIST}"
                - name: GR02_01_REGULAR_USERS
                  value: "${_REGULAR_USERS_LIST}"
                - name: GR02_08_ALLOWED_DOMAINS
                  value: "${_ALLOWED_DOMAINS}"
                - name: GR02_08_DENY_DOMAINS
                  value: "${_DENY_DOMAINS}"
                - name: GR02_09_HAS_GUEST_USERS
                  value: "${_HAS_GUEST_USERS}"
                - name: GR02_10_HAS_GUEST_USERS
                  value: "${_HAS_GUEST_USERS}"
                - name: GR03_01_CUSTOMER_IDS
                  value: "${_CUSTOMER_IDS}"
                - name: GR03_01_ALLOWED_CIDRS
                  value: "${_ALLOWED_CIDRS}"
                - name: GR05_01_SECURITY_CATEGORY_KEY
                  value: "${_SECURITY_CATEGORY_KEY}"
                - name: GR07_03_ALLOWED_CA_ISSUERS
                  value: "${_CA_ISSUERS}"
                resources:
                  limits:
                    cpu: 1000m
                    memory: 2Gi
                volumeMounts:
                - name: policies
                  mountPath: /mnt/policies
                startupProbe:
                  initialDelaySeconds: 30
                  timeoutSeconds: 10
                  periodSeconds: 10
                  failureThreshold: 5
                  httpGet:
                    path: /
                    port: 8181
              volumes:
              - name: policies
                emptyDir:
                  medium: Memory
                  sizeLimit: 512Mi
          traffic:
          - percent: 100
            latestRevision: true
        EOF
  # Deploy the service to CloudRun
  - id: "Deploy to new Version to CloudRun"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: 'gcloud'
    args:
      [
      "--impersonate-service-account",
      "${_SERVICE_ACCOUNT}",
      'run', 'services', 'replace', 
      '/workspace/cloudrun.yaml'
      ]
substitutions:
  _SERVICE_ACCOUNT: ""
  _ORG_NAME: ""
  _REGION: ""
  _PROJECT_ID: ""
  _ORG_ID: ""
  _DOMAIN: ""
  _GCS_BUCKET: ""
  _GC_PROFILE: ""
  _SECURITY_CATEGORY_KEY: ""
  _PRIVILEGED_USERS_LIST: ""
  _REGULAR_USERS_LIST: ""
  _ALLOWED_DOMAINS: ""
  _DENY_DOMAINS: ""
  _HAS_GUEST_USERS: ""
  _ALLOWED_CIDRS: ""
  _CUSTOMER_IDS: ""
  _CA_ISSUERS: ""
  _POLICY_REPO: ""
  _BRANCH: ""
  _IMAGE_TAG: ""
  _POLICY_VERSION: ""
  _OPA_IMAGE: ""
  _APP_PORT: ""
options:
  dynamicSubstitutions: true
  logging: CLOUD_LOGGING_ONLY
